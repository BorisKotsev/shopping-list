package shopping.list;

import java.util.*;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author HP
 */
public class NewJFrame extends javax.swing.JFrame {

    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
        AddItemToComboBox();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Exit = new javax.swing.JButton();
        Pos = new javax.swing.JTextField();
        Quantity = new javax.swing.JTextField();
        Sums = new javax.swing.JTextField();
        Product = new javax.swing.JTextField();
        View = new javax.swing.JButton();
        Add = new javax.swing.JButton();
        Edit = new javax.swing.JButton();
        Delete = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        Price = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        items = new javax.swing.JComboBox<>();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(0, 255, 51));

        jPanel1.setBackground(new java.awt.Color(102, 255, 102));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel1.setText("Product:");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel2.setText("Quantity:");

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel3.setText("Price:");

        jLabel4.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel4.setText("Pos:");

        Exit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Exit.setText("EXIT");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        Pos.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Pos.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PosActionPerformed(evt);
            }
        });

        Quantity.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Quantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                QuantityActionPerformed(evt);
            }
        });

        Sums.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Sums.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SumsActionPerformed(evt);
            }
        });

        Product.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Product.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductActionPerformed(evt);
            }
        });

        View.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        View.setText("View");
        View.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ViewActionPerformed(evt);
            }
        });

        Add.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Add.setText("Add");
        Add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AddActionPerformed(evt);
            }
        });

        Edit.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Edit.setText("Edit");
        Edit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EditActionPerformed(evt);
            }
        });

        Delete.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Delete.setText("Delete");
        Delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DeleteActionPerformed(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        jLabel5.setText("Sum:");

        Price.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceActionPerformed(evt);
            }
        });

        textArea.setColumns(20);
        textArea.setFont(new java.awt.Font("Monospaced", 0, 14)); // NOI18N
        textArea.setRows(100);
        textArea.setTabSize(10);
        jScrollPane2.setViewportView(textArea);

        items.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        items.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "" }));
        items.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(jLabel4)
                .addGap(28, 28, 28)
                .addComponent(jLabel1)
                .addGap(77, 77, 77)
                .addComponent(jLabel2)
                .addGap(47, 47, 47)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Exit))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(Pos, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(Product, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29)
                        .addComponent(Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(Price, javax.swing.GroupLayout.PREFERRED_SIZE, 91, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 477, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addComponent(View)
                            .addGap(60, 60, 60)
                            .addComponent(Add)
                            .addGap(40, 40, 40)
                            .addComponent(Edit)
                            .addGap(30, 30, 30)
                            .addComponent(Delete))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(0, 46, Short.MAX_VALUE)
                                .addComponent(Sums, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel5)
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())
                    .addComponent(items, javax.swing.GroupLayout.Alignment.TRAILING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Exit)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(32, 32, 32)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jLabel4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Product, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Quantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(Pos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(Price)
                        .addComponent(items)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 379, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(Sums, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(View)
                    .addComponent(Add)
                    .addComponent(Edit)
                    .addComponent(Delete))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 8, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void QuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_QuantityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_QuantityActionPerformed

    public void Sum(){

        Connection conn = null;
        PreparedStatement pst1 = null;  
        PreparedStatement pst2 = null;  

        double sum = 0;
        double tmp1 = 0;
        double tmp2 = 0;

        LinkedList <Double> tmpV1 = new LinkedList <Double>();
        LinkedList <Double> tmpV2 = new LinkedList <Double>();

        try{
            ConnectDB obj = new ConnectDB();
            conn = obj.connect();
            String PriceSQL = "SELECT \"Price\" FROM public.shop";
            String QuantitySQL = "SELECT \"Quantity\" FROM public.shop";

            pst1 = conn.prepareStatement(PriceSQL);
            pst2 = conn.prepareStatement(QuantitySQL);
            ResultSet res1 = pst1.executeQuery();
            ResultSet res2 = pst2.executeQuery();

            while(res1.next()){
                tmp1 = Double.parseDouble(res1.getString(1));
                tmpV1.push(tmp1);
            }   

            while(res2.next()){     
                tmp2 = Double.parseDouble(res2.getString(1));
                tmpV2.push(tmp2);
            }

            for(int i = 0; i < tmpV1.size(); i++)
            {
                for(int j = 0; j < tmpV2.size(); j++)
                {
                    if(i == j)
                    {
                       sum += tmpV1.get(i) * tmpV2.get(j);
                    }
                }
            }

            String sumStr = Double.toString(sum);                      
            Sums.setText(sumStr);        
            conn.close();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }
    
    public void clearComboBox(){
        items.removeAllItems();
    }
    
    
    public void AddItemToComboBox(){
        
        Connection conn = null;
        PreparedStatement pst = null; 
        
        try{
            ConnectDB obj = new ConnectDB();
            conn = obj.connect();
            
            String SQL = "SELECT * FROM public.shop ORDER BY \"ID\"";
            
            pst = conn.prepareStatement(SQL);
            
            ResultSet res = pst.executeQuery();    
            
            while(res.next()){
                items.addItem(res.getString("Product"));
            }

            conn.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }    
    }
    
    private void ViewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ViewActionPerformed
        
        Connection conn = null;
        PreparedStatement pst = null;        
        String answer = "";
        
        try{
            ConnectDB obj = new ConnectDB();
            conn = obj.connect();
            String SQL = "SELECT * FROM public.shop ORDER BY \"ID\"";
            
            pst = conn.prepareStatement(SQL);
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                answer += String.format("Pos: %s\t Product: %s Quantity: %s Price: %s\n", res.getString(1), res.getString(2), res.getString(3), res.getString(4));
            }
            textArea.setText(answer);
            
            conn.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }        
    }//GEN-LAST:event_ViewActionPerformed

    private void AddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AddActionPerformed
    
        Connection conn = null;
        PreparedStatement pst = null;        
        
        try{
            ConnectDB obj = new ConnectDB();
            conn = obj.connect();
            
            int pos = Integer.parseInt(Pos.getText());
            String product = Product.getText(); 
            int quantity = Integer.parseInt(Quantity.getText());
            double price = Double.parseDouble(Price.getText());
            
            String SQL = "INSERT INTO public.shop VALUES ("+ pos + ", '" + product + "' ," + quantity + "," + price +");";
            
            pst = conn.prepareStatement(SQL);
            pst.execute();    
            
            conn.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
      
        Sum();
        clearComboBox();
        AddItemToComboBox();
                
        Pos.setText("");
        Product.setText(""); 
        Quantity.setText("");
        Price.setText("");
    }//GEN-LAST:event_AddActionPerformed

    private void DeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DeleteActionPerformed
        
        Connection conn = null;
        PreparedStatement pst = null;        
        
        try{
            ConnectDB obj = new ConnectDB();
            conn = obj.connect();
 
            String SQL = "DELETE FROM public.shop WHERE \"ID\"=" + Pos.getText();
            
            pst = conn.prepareStatement(SQL);
            pst.executeQuery();

            conn.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }    
        
        clearComboBox();
        AddItemToComboBox();
        
        Sum();
        
        Pos.setText("");
        Product.setText(""); 
        Quantity.setText("");
        Price.setText("");  
    }//GEN-LAST:event_DeleteActionPerformed

    private void PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceActionPerformed

    private void PosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PosActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PosActionPerformed

    private void ProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductActionPerformed

    private void EditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EditActionPerformed
        
        Connection conn = null;
        PreparedStatement pst = null;        
        
        try{
            ConnectDB obj = new ConnectDB();
            conn = obj.connect();
            
            int pos = Integer.parseInt(Pos.getText());
            String product = Product.getText(); 
            int quantity = Integer.parseInt(Quantity.getText());
            double price = Double.parseDouble(Price.getText());
            
            String SQL = "UPDATE public.shop SET \"ID\"=" + pos + ",\"Product\"=\'" + product + "\',\"Quantity\"=" + quantity + ",\"Price\"=" + price + "WHERE \"ID\"=" + pos +";";                                                
            
            pst = conn.prepareStatement(SQL);
            pst.executeQuery();    
            
            conn.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
        
        Sum();
        
        Pos.setText("");
        Product.setText(""); 
        Quantity.setText("");
        Price.setText("");
    }//GEN-LAST:event_EditActionPerformed

    private void SumsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SumsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SumsActionPerformed

    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        System.exit(0);
    }//GEN-LAST:event_ExitActionPerformed

    private void itemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsActionPerformed
 
        Connection conn = null;
        PreparedStatement pst = null;        
        
        try{
            ConnectDB obj = new ConnectDB();
            conn = obj.connect();
            
            String selectedItem = items.getSelectedItem().toString();
            
            String SQL = "SELECT * FROM public.shop WHERE \"Product\"=\'" + selectedItem + "\'";
            
            pst = conn.prepareStatement(SQL);
            ResultSet res = pst.executeQuery();
            
            while(res.next()){
                
                String ID = res.getString(1);
                String price = res.getString(4);
                String quantity = res.getString(3);
                
                Pos.setText(ID);
                Product.setText(selectedItem); 
                Quantity.setText(quantity);
                Price.setText(price);
            }
  
            conn.close();
            
        } catch (Exception e) {
            e.printStackTrace();
        }
    }//GEN-LAST:event_itemsActionPerformed


    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);  
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Add;
    private javax.swing.JButton Delete;
    private javax.swing.JButton Edit;
    private javax.swing.JButton Exit;
    private javax.swing.JTextField Pos;
    private javax.swing.JTextField Price;
    private javax.swing.JTextField Product;
    private javax.swing.JTextField Quantity;
    public javax.swing.JTextField Sums;
    private javax.swing.JButton View;
    private javax.swing.JComboBox<String> items;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea textArea;
    // End of variables declaration//GEN-END:variables
}
